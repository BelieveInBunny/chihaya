kind: pipeline
name: default
type: docker

steps:
    -   name: restore-cache
        image: meltwater/drone-cache
        failure: ignore
        environment:
            AWS_ACCESS_KEY_ID:
                from_secret: aws_access_key_id
            AWS_SECRET_ACCESS_KEY:
                from_secret: aws_secret_access_key
            PLUGIN_PATH_STYLE: true
        settings:
            endpoint:
                from_secret: aws_endpoint
            region: ab-1
            bucket: drone-cache
            restore: true
            cache_key: '{{ .Commit.Branch }}'
            archive_format: gzip
            mount:
                - ./.go
        depends_on: [ clone ]
    -   name: get
        image: golang:1.11
        environment:
            GO111MODULE: on
            GOPATH: /drone/src/.go
        commands:
            - go get
        depends_on: [ restore-cache ]
    -   name: vet
        image: golang:1.11
        environment:
            GO111MODULE: on
            GOPATH: /drone/src/.go
        commands:
            - go vet
        depends_on: [ get ]
    -   name: tests
        image: golang:1.11
        environment:
            GO111MODULE: on
            GOPATH: /drone/src/.go
        commands:
            - go test ./... -tags ""
            - go test ./... -tags "scrape record"
        depends_on: [ get ]
    -   name: build
        image: golang:1.11
        environment:
            GO111MODULE: on
            GOPATH: /drone/src/.go
        commands:
            - go version
            - go build -tags ""
            - go build -tags "scrape record"
        depends_on: [ get ]
    -   name: linter
        image: golangci/golangci-lint:latest
        environment:
            GO111MODULE: on
            GOPATH: /drone/src/.go
        commands:
            - golangci-lint run --color always --build-tags ""
            - golangci-lint run --color always --build-tags "scrape record"
        depends_on: [ build ]
    -   name: rebuild-cache
        image: meltwater/drone-cache
        failure: ignore
        environment:
            AWS_ACCESS_KEY_ID:
                from_secret: aws_access_key_id
            AWS_SECRET_ACCESS_KEY:
                from_secret: aws_secret_access_key
            PLUGIN_PATH_STYLE: true
        settings:
            endpoint:
                from_secret: aws_endpoint
            region: ab-1
            bucket: drone-cache
            rebuild: true
            cache_key: '{{ .Commit.Branch }}'
            archive_format: gzip
            mount:
                - ./.go
        depends_on: [ get ]
